
Description:

  Export IP user files repository with static, dynamic, netlist, verilog/vhdl stubs and memory initializaton files.

Arguments:

  -of_objects - (Optional) Target object for which the IP static and dynamic files needs to be exported.

  -ip_user_files_dir - (Optional) Directory path to IP user files base directory. By default, if this switch is not specified then
                       this command will use the path specified with the "IP.USER_FILES_DIR" project property value.

  -ipstatic_source_dir - (Optional)  Directory path to the static IP files. By default, if this switch is not specified then this
                       command will use the path specified with the "SIM.IPSTATIC_SOURCE_DIR" project property value.

  -lib_map_path - (Optional) Directory path to the compiled simulation library.

  -no_script - (Optional) Do not export simulation scripts generated by export_simulation Tcl command. By default, this command will
               call export_simulation to generate simulation scripts.

  -sync - (Optional) Delete specific IP/IPI instance static, dynamic and generated scripts from the ip_user_files dir.

  -reset - (Optional) Delete all IP/IPI static, dynamic and simulation script files from the ip_user_files dir.

  -force - (Optional) Overwrite existing source files in the ip_user_files directory

  NOTE:- If the -ip_user_files_dir switch is specified, by default the IP static files will be exported under the sub-directory
         with the name "ipstatic". If this switch is specified in conjunction with -ipstatic_source_dir, then the IP static
         files will be exported in the path specified with the -ipstatic_source_dir switch. 

  -quiet - (Optional) Execute the command quietly, ignoring any command line errors and returning no
  messages. The command also returns TCL_OK regardless of any errors encountered during execution.

  -verbose - (Optional) Temporarily override any message limits and return all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following command will export, 'char_fifo' IP dynamic files to '<project>/<project>.ip_user_files/ip/char_fifo' directory,
  'char_fifo' IP static files to '<project>/<project>.ip_user_files/ipstatic' directory, and simulation scripts files to
  '<project>/<project>.ip_user_files/sim_scripts/char_fifo/<simulator>' directory:-

  % export_ip_user_files -of_objects [get_ips char_fifo]

  The following command will export 'char_fifo' static files in '/my_project/user_files/static' and dynamic files
  in '/my_project/user_files/ip' directory:-

  % export_ip_user_files -of_objects [get_ips char_fifo] -ip_user_files_dir /my_project/user_files -ipstatic_source_dir /my_project/user_files/static

  The following command will export 'char_fifo' simulation script files using compiled library from '/my_project/compiled_libs/lib':-

  % export_ip_user_files -of_objects [get_ips char_fifo] -lib_map_path /my_project/compiled_libs/lib

  The following command will export files but will not generate simulation scripts for 'char_fifo':-

  % export_ip_user_files -of_objects [get_ips char_fifo] -no_script

  The following command will delete static, dynamic and simulation script files for the 'char_fifo' instance:-

  % export_ip_user_files -of_objects [get_ips char_fifo] -sync

  The following command will delete all static, dynamic and simulation script files:-

  % export_ip_user_files -of_objects [get_ips char_fifo] -reset

  The following command will overwrite all static, dynamic and simulation script files:-

  % export_ip_user_files -of_objects [get_ips char_fifo] -force

See Also:

   *  get_files
   *  get_ips
